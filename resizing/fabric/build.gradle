plugins {
    id 'multiloader-loader'
    id 'fabric-loom'
}

repositories {
    maven {
        name 'jitpack'
        url 'https://jitpack.io'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${parchment_minecraft}:${parchment_version}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'

    implementation getProject(project, ":common")
    implementation project(":common")
    implementation project(":core:core_common")

    modImplementation "curse.maven:pehkui-319596:4684391"
    modImplementation 'com.github.Virtuoel:KanosConfig:0.4.1'
}

loom {
    if (getProject(project, ":common").file("src/main/resources/${mod_id}.accesswidener").exists()) {
        accessWidenerPath.set(getProject(project, ":common").file("src/main/resources/${mod_id}.accesswidener"))
    }
    mixin {
        defaultRefmapName.set("${mod_base_id}.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}
