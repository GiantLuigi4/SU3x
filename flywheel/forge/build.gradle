plugins {
    id 'multiloader-loader'
    id 'net.neoforged.moddev.legacyforge'
}

mixin {
    add(sourceSets.main, "${mod_base_id}.flywheel.refmap.json")

    config("${mod_base_id}.flywheel.mixins.json")
}

evaluationDependsOn(':forge')
evaluationDependsOn(':core:core_forge')

legacyForge {
    version = "${minecraft_version}-${forge_version}"

//    validateAccessTransformers = true

    def at = getProject(project, ':common').file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformers = [at.path]
    }
    parchment {
        minecraftVersion = parchment_minecraft
        mappingsVersion = parchment_version
    }
    runs {
        client {
            client()
        }
        data {
            data()
            programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
        }
        server {
            server()
        }
    }

    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }

        project(":forge").legacyForge.mods.forEach { mod ->
            project(":flywheel:flywheel_forge").legacyForge.mods.add(mod)
        }

        project(":core:core_forge").legacyForge.mods.forEach { mod ->
            project(":flywheel:flywheel_forge").legacyForge.mods.add(mod)
        }

        println("LIST MODS")
        forEach { mod ->
            println(mod.name)
        }
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

repositories {
    maven {
        name "createmod maven"
        url "https://maven.createmod.net/"
    }
}

dependencies {
    compileOnly getProject(project, ":common")
    compileOnly project(":common")
    compileOnly project(":core:core_common")

    modImplementation project(":forge")
    modImplementation project(":core:core_forge")

    annotationProcessor("org.spongepowered:mixin:0.8.5-SNAPSHOT:processor")

    modImplementation ("dev.engine-room.flywheel:flywheel-forge-api-${minecraft_version}:1.0.4-beta-232")
    modImplementation ("dev.engine-room.flywheel:flywheel-forge-${minecraft_version}:1.0.4-beta-232")
}

jar {
    finalizedBy('reobfJar')
    manifest.attributes([
            "MixinConfigs": "${mod_base_id}.flywheel.mixins.json"
    ])
}
